name: GitHub Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Maven Release
        uses: qcastel/github-actions-maven-release@v1.12.41
        with:
          maven_project_path: '.'
          maven_options: '-DskipTests'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          signing_key: ${{ secrets.SIGNING_KEY }}
          signing_password: ${{ secrets.SIGNING_PASSWORD }}

      - name: Check if release exists
        id: check_release
        uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo } = context.repo;
            const tag_name = context.ref.replace('refs/tags/', '');
            try {
              const release = await github.rest.repos.getReleaseByTag({
                owner,
                repo,
                tag: tag_name
              });
              return release.data.id;
            } catch (error) {
              if (error.status === 404) {
                return false;
              }
              throw error;
            }

      - name: Create GitHub Release
        if: steps.check_release.outputs.result == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name}}
          release_name: Release ${{ github.ref_name }}
          body: |
            This release includes the latest changes.
          draft: false
          prerelease: false

